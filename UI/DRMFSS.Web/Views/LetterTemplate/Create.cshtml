@model DRMFSS.BLL.LetterTemplate
@using DRMFSS.Web.Helpers
@{
    ViewBag.Title = Html.Translate("Create");
}

<h2>@Html.Translate("Create New Letter Template")</h2>


@using (Html.BeginForm())
    {
    @Html.HiddenFor(model => model.LetterTemplateID)
        <table width="100%">
        <tr>
        <td style="width:200px;">
            @Html.LabelFor(model => model.Name)
        </td>
        <td>
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </td>
        </tr>
        <tr>
        <td>
            @Html.LabelFor(model => model.Template)
        </td>
        <td>
            @{Html.Telerik().EditorFor(model => model.Template).Name("template").HtmlAttributes(new {style="height:450px;"})
            .Tools(tools =>
            {

                tools.Snippets(
                                    sn => { 
                                        sn.Add(Html.Translate("Gift Certeficate Details"), new DRMFSS.Web.Helpers.LetterTemplateHelper().GetDefaultGiftDetail()); 
                                     }
                               );
                tools.Custom(cust => cust.Template(() =>
                    {
                        Html.Telerik().DropDownList().Name("certificateFields")
                            .Items(s =>
                                {
                                    s.Add().Text(Html.Translate("-- Select Variables --")).Value(DRMFSS.Web.Helpers.CertificateFields.DONOR);
                                    s.Add().Text(Html.Translate("Donor")).Value(DRMFSS.Web.Helpers.CertificateFields.DONOR);
                                    s.Add().Text(Html.Translate("ETA")).Value(DRMFSS.Web.Helpers.CertificateFields.ETA);
                                    s.Add().Text(Html.Translate("Gift Date")).Value(DRMFSS.Web.Helpers.CertificateFields.GIFTDATE);
                                    s.Add().Text(Html.Translate("Reference No")).Value(DRMFSS.Web.Helpers.CertificateFields.REFERENCENO);
                                    s.Add().Text(Html.Translate("SI Number")).Value(DRMFSS.Web.Helpers.CertificateFields.SINUMBER);
                                    s.Add().Text(Html.Translate("Vessel")).Value(DRMFSS.Web.Helpers.CertificateFields.VESSEL);
                                }).ClientEvents(ev => ev.OnChange("certFieldsChanged"))
                                .Render();

                        Html.Telerik().DropDownList().Name("certificateDetailFields")
                            .Items(s =>
                                {
                                    s.Add().Text(Html.Translate("Account Number")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.ACCOUNTNUMBER);
                                    s.Add().Text(Html.Translate("Bill of Loading")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.BILLOFLOADING);
                                    s.Add().Text(Html.Translate("Budget Type")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.BUDGETTYPE);
                                    s.Add().Text(Html.Translate("Currency")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.CURRENCY);
                                    s.Add().Text(Html.Translate("Fund Source")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.FUNDSOURCE);
                                    s.Add().Text(Html.Translate("Estimated Price")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.ESTIMATEDPRICE);
                                    s.Add().Text(Html.Translate("Estimated Tax")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.ESTIMATEDTAX);
                                    s.Add().Text(Html.Translate("Fund Source")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.FUNDSOURCE);
                                    s.Add().Text(Html.Translate("Weight in MT")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.WEIGHTINMT);
                                    s.Add().Text(Html.Translate("Year Purchased")).Value(DRMFSS.Web.Helpers.CertificateDetailFields.YEARPURCHASED);
                                }).ClientEvents(ev => ev.OnChange("certFieldsChanged"))
                                .Render(); 
                    }
            ));

            }).Render();


            }
            @Html.ValidationMessageFor(model => model.Name)
        </td>
        </tr>
        
        <tr>
            <td></td>
            <td>  
                <input class="t-button" type="submit" value="@Html.Translate("Save")" /></td>
        </tr>
        </table>
    }
<div class="clear"></div>
<div>
 <script type="text/javascript">
     function certFieldsChanged(e) {
         var edit = $('#template').data('tEditor');
         edit.exec('insertHtml', { value: e.value });
     }
    </script>
    @Html.ActionLink(Html.Translate("Back to List"), "Index")
</div>
